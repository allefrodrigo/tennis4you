{"ast":null,"code":"var _jsxFileName = \"/Users/allefschmidt/Documents/GitHub/Tennis4You/tennis4you/src/NewCalendar.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { StaticDatePicker } from '@mui/x-date-pickers/StaticDatePicker';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport isSameDay from 'date-fns/isSameDay';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomPickersDay = styled(PickersDay, {\n  shouldForwardProp: prop => prop !== 'dayIsBetween' && prop !== 'isFirstDay' && prop !== 'isLastDay'\n})(_ref => {\n  let {\n    theme,\n    dayIsBetween,\n    isFirstDay,\n    isLastDay\n  } = _ref;\n  return { ...(dayIsBetween && {\n      borderRadius: 0,\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.primary.dark\n      }\n    }),\n    ...(isFirstDay && {\n      borderTopLeftRadius: '50%',\n      borderBottomLeftRadius: '50%'\n    }),\n    ...(isLastDay && {\n      borderTopRightRadius: '50%',\n      borderBottomRightRadius: '50%'\n    })\n  };\n});\nexport default function CustomDay() {\n  _s();\n\n  const [value, setValue] = React.useState(new Date());\n\n  const renderWeekPickerDay = (date, selectedDates, pickersDayProps) => {\n    if (!value) {\n      return /*#__PURE__*/_jsxDEV(PickersDay, { ...pickersDayProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n\n    const start = startOfWeek(value);\n    const end = endOfWeek(value);\n    const dayIsBetween = isWithinInterval(date, {\n      start,\n      end\n    });\n    const isFirstDay = isSameDay(date, start);\n    const isLastDay = isSameDay(date, end);\n    return /*#__PURE__*/_jsxDEV(CustomPickersDay, { ...pickersDayProps,\n      disableMargin: true,\n      dayIsBetween: dayIsBetween,\n      isFirstDay: isFirstDay,\n      isLastDay: isLastDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(StaticDatePicker, {\n      displayStaticWrapperAs: \"desktop\",\n      label: \"Week picker\",\n      value: value,\n      onChange: newValue => {\n        setValue(newValue);\n        console.log(newValue);\n      },\n      renderDay: renderWeekPickerDay,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, this),\n      inputFormat: \"'Week of' MMM d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomDay, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n\n_c = CustomDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDay\");","map":{"version":3,"names":["React","styled","TextField","AdapterDateFns","LocalizationProvider","StaticDatePicker","PickersDay","endOfWeek","isSameDay","isWithinInterval","startOfWeek","CustomPickersDay","shouldForwardProp","prop","theme","dayIsBetween","isFirstDay","isLastDay","borderRadius","backgroundColor","palette","primary","main","color","common","white","dark","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","CustomDay","value","setValue","useState","Date","renderWeekPickerDay","date","selectedDates","pickersDayProps","start","end","newValue","console","log","params"],"sources":["/Users/allefschmidt/Documents/GitHub/Tennis4You/tennis4you/src/NewCalendar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { StaticDatePicker } from '@mui/x-date-pickers/StaticDatePicker';\nimport { PickersDay, PickersDayProps } from '@mui/x-date-pickers/PickersDay';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport isSameDay from 'date-fns/isSameDay';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport startOfWeek from 'date-fns/startOfWeek';\n\ntype CustomPickerDayProps = PickersDayProps<Date> & {\n  dayIsBetween: boolean;\n  isFirstDay: boolean;\n  isLastDay: boolean;\n};\n\nconst CustomPickersDay = styled(PickersDay, {\n  shouldForwardProp: (prop) =>\n    prop !== 'dayIsBetween' && prop !== 'isFirstDay' && prop !== 'isLastDay',\n})<CustomPickerDayProps>(({ theme, dayIsBetween, isFirstDay, isLastDay }) => ({\n  ...(dayIsBetween && {\n    borderRadius: 0,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  }),\n  ...(isFirstDay && {\n    borderTopLeftRadius: '50%',\n    borderBottomLeftRadius: '50%',\n  }),\n  ...(isLastDay && {\n    borderTopRightRadius: '50%',\n    borderBottomRightRadius: '50%',\n  }),\n})) as React.ComponentType<CustomPickerDayProps>;\n\nexport default function CustomDay() {\n  const [value, setValue] = React.useState<Date | null>(new Date());\n\n  const renderWeekPickerDay = (\n    date: Date,\n    selectedDates: Array<Date | null>,\n    pickersDayProps: PickersDayProps<Date>,\n  ) => {\n    if (!value) {\n      return <PickersDay {...pickersDayProps} />;\n    }\n\n    const start = startOfWeek(value);\n    const end = endOfWeek(value);\n\n    const dayIsBetween = isWithinInterval(date, { start, end });\n    const isFirstDay = isSameDay(date, start);\n    const isLastDay = isSameDay(date, end);\n\n    return (\n      <CustomPickersDay\n        {...pickersDayProps}\n        disableMargin\n        dayIsBetween={dayIsBetween}\n        isFirstDay={isFirstDay}\n        isLastDay={isLastDay}\n      />\n    );\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StaticDatePicker\n        displayStaticWrapperAs=\"desktop\"\n        label=\"Week picker\"\n        value={value}\n        onChange={(newValue) => {\n          setValue(newValue);\n          console.log(newValue)\n        }}\n        renderDay={renderWeekPickerDay}\n        renderInput={(params) => <TextField {...params} />}\n        inputFormat=\"'Week of' MMM d\"\n      />\n    </LocalizationProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}